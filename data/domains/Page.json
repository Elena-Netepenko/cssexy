[
  [
    "addScriptToEvaluateOnLoad",
    null
  ],
  [
    "addScriptToEvaluateOnNewDocument",
    null
  ],
  [
    "bringToFront",
    null
  ],
  [
    "captureScreenshot",
    null
  ],
  [
    "captureSnapshot",
    null
  ],
  [
    "clearDeviceMetricsOverride",
    null
  ],
  [
    "clearDeviceOrientationOverride",
    null
  ],
  [
    "clearGeolocationOverride",
    null
  ],
  [
    "createIsolatedWorld",
    null
  ],
  [
    "deleteCookie",
    null
  ],
  [
    "disable",
    null
  ],
  [
    "enable",
    null
  ],
  [
    "getAppManifest",
    null
  ],
  [
    "getInstallabilityErrors",
    null
  ],
  [
    "getManifestIcons",
    null
  ],
  [
    "getAppId",
    null
  ],
  [
    "getAdScriptId",
    null
  ],
  [
    "getFrameTree",
    null
  ],
  [
    "getLayoutMetrics",
    null
  ],
  [
    "getNavigationHistory",
    null
  ],
  [
    "resetNavigationHistory",
    null
  ],
  [
    "getResourceContent",
    null
  ],
  [
    "getResourceTree",
    null
  ],
  [
    "handleJavaScriptDialog",
    null
  ],
  [
    "navigate",
    null
  ],
  [
    "navigateToHistoryEntry",
    null
  ],
  [
    "printToPDF",
    null
  ],
  [
    "reload",
    null
  ],
  [
    "removeScriptToEvaluateOnLoad",
    null
  ],
  [
    "removeScriptToEvaluateOnNewDocument",
    null
  ],
  [
    "screencastFrameAck",
    null
  ],
  [
    "searchInResource",
    null
  ],
  [
    "setAdBlockingEnabled",
    null
  ],
  [
    "setBypassCSP",
    null
  ],
  [
    "getPermissionsPolicyState",
    null
  ],
  [
    "getOriginTrials",
    null
  ],
  [
    "setDeviceMetricsOverride",
    null
  ],
  [
    "setDeviceOrientationOverride",
    null
  ],
  [
    "setFontFamilies",
    null
  ],
  [
    "setFontSizes",
    null
  ],
  [
    "setDocumentContent",
    null
  ],
  [
    "setDownloadBehavior",
    null
  ],
  [
    "setGeolocationOverride",
    null
  ],
  [
    "setLifecycleEventsEnabled",
    null
  ],
  [
    "setTouchEmulationEnabled",
    null
  ],
  [
    "startScreencast",
    null
  ],
  [
    "stopLoading",
    null
  ],
  [
    "crash",
    null
  ],
  [
    "close",
    null
  ],
  [
    "setWebLifecycleState",
    null
  ],
  [
    "stopScreencast",
    null
  ],
  [
    "produceCompilationCache",
    null
  ],
  [
    "addCompilationCache",
    null
  ],
  [
    "clearCompilationCache",
    null
  ],
  [
    "setSPCTransactionMode",
    null
  ],
  [
    "setRPHRegistrationMode",
    null
  ],
  [
    "generateTestReport",
    null
  ],
  [
    "waitForDebugger",
    null
  ],
  [
    "setInterceptFileChooserDialog",
    null
  ],
  [
    "setPrerenderingAllowed",
    null
  ],
  [
    "domContentEventFired",
    null
  ],
  [
    "fileChooserOpened",
    null
  ],
  [
    "frameAttached",
    null
  ],
  [
    "frameClearedScheduledNavigation",
    null
  ],
  [
    "frameDetached",
    null
  ],
  [
    "frameNavigated",
    null
  ],
  [
    "documentOpened",
    null
  ],
  [
    "frameResized",
    null
  ],
  [
    "frameRequestedNavigation",
    null
  ],
  [
    "frameScheduledNavigation",
    null
  ],
  [
    "frameStartedLoading",
    null
  ],
  [
    "frameStoppedLoading",
    null
  ],
  [
    "downloadWillBegin",
    null
  ],
  [
    "downloadProgress",
    null
  ],
  [
    "interstitialHidden",
    null
  ],
  [
    "interstitialShown",
    null
  ],
  [
    "javascriptDialogClosed",
    null
  ],
  [
    "javascriptDialogOpening",
    null
  ],
  [
    "lifecycleEvent",
    null
  ],
  [
    "backForwardCacheNotUsed",
    null
  ],
  [
    "loadEventFired",
    null
  ],
  [
    "navigatedWithinDocument",
    null
  ],
  [
    "screencastFrame",
    null
  ],
  [
    "screencastVisibilityChanged",
    null
  ],
  [
    "windowOpen",
    null
  ],
  [
    "compilationCacheProduced",
    null
  ],
  [
    "FrameId",
    {
      "category": "type",
      "id": "FrameId",
      "description": "Unique frame identifier.",
      "type": "string"
    }
  ],
  [
    "AdFrameType",
    {
      "category": "type",
      "id": "AdFrameType",
      "description": "Indicates whether a frame has been identified as an ad.",
      "experimental": true,
      "type": "string",
      "enum": [
        "none",
        "child",
        "root"
      ]
    }
  ],
  [
    "AdFrameExplanation",
    {
      "category": "type",
      "id": "AdFrameExplanation",
      "experimental": true,
      "type": "string",
      "enum": [
        "ParentIsAd",
        "CreatedByAdScript",
        "MatchedBlockingRule"
      ]
    }
  ],
  [
    "AdFrameStatus",
    {
      "category": "type",
      "id": "AdFrameStatus",
      "description": "Indicates whether a frame has been identified as an ad and why.",
      "experimental": true,
      "type": "object",
      "properties": {
        "adFrameType": {
          "$ref": "AdFrameType"
        },
        "explanations": {
          "optional": true,
          "type": "array",
          "items": {
            "$ref": "AdFrameExplanation"
          }
        }
      }
    }
  ],
  [
    "AdScriptId",
    {
      "category": "type",
      "id": "AdScriptId",
      "description": "Identifies the bottom-most script which caused the frame to be labelled\nas an ad.",
      "experimental": true,
      "type": "object",
      "properties": {
        "scriptId": {
          "description": "Script Id of the bottom-most script which caused the frame to be labelled\nas an ad.",
          "$ref": "Runtime.ScriptId"
        },
        "debuggerId": {
          "description": "Id of adScriptId's debugger.",
          "$ref": "Runtime.UniqueDebuggerId"
        }
      }
    }
  ],
  [
    "SecureContextType",
    {
      "category": "type",
      "id": "SecureContextType",
      "description": "Indicates whether the frame is a secure context and why it is the case.",
      "experimental": true,
      "type": "string",
      "enum": [
        "Secure",
        "SecureLocalhost",
        "InsecureScheme",
        "InsecureAncestor"
      ]
    }
  ],
  [
    "CrossOriginIsolatedContextType",
    {
      "category": "type",
      "id": "CrossOriginIsolatedContextType",
      "description": "Indicates whether the frame is cross-origin isolated and why it is the case.",
      "experimental": true,
      "type": "string",
      "enum": [
        "Isolated",
        "NotIsolated",
        "NotIsolatedFeatureDisabled"
      ]
    }
  ],
  [
    "GatedAPIFeatures",
    {
      "category": "type",
      "id": "GatedAPIFeatures",
      "experimental": true,
      "type": "string",
      "enum": [
        "SharedArrayBuffers",
        "SharedArrayBuffersTransferAllowed",
        "PerformanceMeasureMemory",
        "PerformanceProfile"
      ]
    }
  ],
  [
    "PermissionsPolicyFeature",
    {
      "category": "type",
      "id": "PermissionsPolicyFeature",
      "description": "All Permissions Policy features. This enum should match the one defined\nin third_party/blink/renderer/core/permissions_policy/permissions_policy_features.json5.",
      "experimental": true,
      "type": "string",
      "enum": [
        "accelerometer",
        "ambient-light-sensor",
        "attribution-reporting",
        "autoplay",
        "bluetooth",
        "browsing-topics",
        "camera",
        "captured-surface-control",
        "ch-dpr",
        "ch-device-memory",
        "ch-downlink",
        "ch-ect",
        "ch-prefers-color-scheme",
        "ch-prefers-reduced-motion",
        "ch-prefers-reduced-transparency",
        "ch-rtt",
        "ch-save-data",
        "ch-ua",
        "ch-ua-arch",
        "ch-ua-bitness",
        "ch-ua-platform",
        "ch-ua-model",
        "ch-ua-mobile",
        "ch-ua-form-factor",
        "ch-ua-full-version",
        "ch-ua-full-version-list",
        "ch-ua-platform-version",
        "ch-ua-wow64",
        "ch-viewport-height",
        "ch-viewport-width",
        "ch-width",
        "clipboard-read",
        "clipboard-write",
        "compute-pressure",
        "cross-origin-isolated",
        "direct-sockets",
        "display-capture",
        "document-domain",
        "encrypted-media",
        "execution-while-out-of-viewport",
        "execution-while-not-rendered",
        "focus-without-user-activation",
        "fullscreen",
        "frobulate",
        "gamepad",
        "geolocation",
        "gyroscope",
        "hid",
        "identity-credentials-get",
        "idle-detection",
        "interest-cohort",
        "join-ad-interest-group",
        "keyboard-map",
        "local-fonts",
        "magnetometer",
        "microphone",
        "midi",
        "otp-credentials",
        "payment",
        "picture-in-picture",
        "private-aggregation",
        "private-state-token-issuance",
        "private-state-token-redemption",
        "publickey-credentials-create",
        "publickey-credentials-get",
        "run-ad-auction",
        "screen-wake-lock",
        "serial",
        "shared-autofill",
        "shared-storage",
        "shared-storage-select-url",
        "smart-card",
        "storage-access",
        "sub-apps",
        "sync-xhr",
        "unload",
        "usb",
        "usb-unrestricted",
        "vertical-scroll",
        "web-printing",
        "web-share",
        "window-management",
        "window-placement",
        "xr-spatial-tracking"
      ]
    }
  ],
  [
    "PermissionsPolicyBlockReason",
    {
      "category": "type",
      "id": "PermissionsPolicyBlockReason",
      "description": "Reason for a permissions policy feature to be disabled.",
      "experimental": true,
      "type": "string",
      "enum": [
        "Header",
        "IframeAttribute",
        "InFencedFrameTree",
        "InIsolatedApp"
      ]
    }
  ],
  [
    "PermissionsPolicyBlockLocator",
    {
      "category": "type",
      "id": "PermissionsPolicyBlockLocator",
      "experimental": true,
      "type": "object",
      "properties": {
        "frameId": {
          "$ref": "FrameId"
        },
        "blockReason": {
          "$ref": "PermissionsPolicyBlockReason"
        }
      }
    }
  ],
  [
    "PermissionsPolicyFeatureState",
    {
      "category": "type",
      "id": "PermissionsPolicyFeatureState",
      "experimental": true,
      "type": "object",
      "properties": {
        "feature": {
          "$ref": "PermissionsPolicyFeature"
        },
        "allowed": {
          "type": "boolean"
        },
        "locator": {
          "optional": true,
          "$ref": "PermissionsPolicyBlockLocator"
        }
      }
    }
  ],
  [
    "OriginTrialTokenStatus",
    {
      "category": "type",
      "id": "OriginTrialTokenStatus",
      "description": "Origin Trial(https://www.chromium.org/blink/origin-trials) support.\nStatus for an Origin Trial token.",
      "experimental": true,
      "type": "string",
      "enum": [
        "Success",
        "NotSupported",
        "Insecure",
        "Expired",
        "WrongOrigin",
        "InvalidSignature",
        "Malformed",
        "WrongVersion",
        "FeatureDisabled",
        "TokenDisabled",
        "FeatureDisabledForUser",
        "UnknownTrial"
      ]
    }
  ],
  [
    "OriginTrialStatus",
    {
      "category": "type",
      "id": "OriginTrialStatus",
      "description": "Status for an Origin Trial.",
      "experimental": true,
      "type": "string",
      "enum": [
        "Enabled",
        "ValidTokenNotProvided",
        "OSNotSupported",
        "TrialNotAllowed"
      ]
    }
  ],
  [
    "OriginTrialUsageRestriction",
    {
      "category": "type",
      "id": "OriginTrialUsageRestriction",
      "experimental": true,
      "type": "string",
      "enum": [
        "None",
        "Subset"
      ]
    }
  ],
  [
    "OriginTrialToken",
    {
      "category": "type",
      "id": "OriginTrialToken",
      "experimental": true,
      "type": "object",
      "properties": {
        "origin": {
          "type": "string"
        },
        "matchSubDomains": {
          "type": "boolean"
        },
        "trialName": {
          "type": "string"
        },
        "expiryTime": {
          "$ref": "Network.TimeSinceEpoch"
        },
        "isThirdParty": {
          "type": "boolean"
        },
        "usageRestriction": {
          "$ref": "OriginTrialUsageRestriction"
        }
      }
    }
  ],
  [
    "OriginTrialTokenWithStatus",
    {
      "category": "type",
      "id": "OriginTrialTokenWithStatus",
      "experimental": true,
      "type": "object",
      "properties": {
        "rawTokenText": {
          "type": "string"
        },
        "parsedToken": {
          "description": "`parsedToken` is present only when the token is extractable and\nparsable.",
          "optional": true,
          "$ref": "OriginTrialToken"
        },
        "status": {
          "$ref": "OriginTrialTokenStatus"
        }
      }
    }
  ],
  [
    "OriginTrial",
    {
      "category": "type",
      "id": "OriginTrial",
      "experimental": true,
      "type": "object",
      "properties": {
        "trialName": {
          "type": "string"
        },
        "status": {
          "$ref": "OriginTrialStatus"
        },
        "tokensWithStatus": {
          "type": "array",
          "items": {
            "$ref": "OriginTrialTokenWithStatus"
          }
        }
      }
    }
  ],
  [
    "Frame",
    {
      "category": "type",
      "id": "Frame",
      "description": "Information about the Frame on the page.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Frame unique identifier.",
          "$ref": "FrameId"
        },
        "parentId": {
          "description": "Parent frame identifier.",
          "optional": true,
          "$ref": "FrameId"
        },
        "loaderId": {
          "description": "Identifier of the loader associated with this frame.",
          "$ref": "Network.LoaderId"
        },
        "name": {
          "description": "Frame's name as specified in the tag.",
          "optional": true,
          "type": "string"
        },
        "url": {
          "description": "Frame document's URL without fragment.",
          "type": "string"
        },
        "urlFragment": {
          "description": "Frame document's URL fragment including the '#'.",
          "experimental": true,
          "optional": true,
          "type": "string"
        },
        "domainAndRegistry": {
          "description": "Frame document's registered domain, taking the public suffixes list into account.\nExtracted from the Frame's url.\nExample URLs: http://www.google.com/file.html -> \"google.com\"\n              http://a.b.co.uk/file.html      -> \"b.co.uk\"",
          "experimental": true,
          "type": "string"
        },
        "securityOrigin": {
          "description": "Frame document's security origin.",
          "type": "string"
        },
        "mimeType": {
          "description": "Frame document's mimeType as determined by the browser.",
          "type": "string"
        },
        "unreachableUrl": {
          "description": "If the frame failed to load, this contains the URL that could not be loaded. Note that unlike url above, this URL may contain a fragment.",
          "experimental": true,
          "optional": true,
          "type": "string"
        },
        "adFrameStatus": {
          "description": "Indicates whether this frame was tagged as an ad and why.",
          "experimental": true,
          "optional": true,
          "$ref": "AdFrameStatus"
        },
        "secureContextType": {
          "description": "Indicates whether the main document is a secure context and explains why that is the case.",
          "experimental": true,
          "$ref": "SecureContextType"
        },
        "crossOriginIsolatedContextType": {
          "description": "Indicates whether this is a cross origin isolated context.",
          "experimental": true,
          "$ref": "CrossOriginIsolatedContextType"
        },
        "gatedAPIFeatures": {
          "description": "Indicated which gated APIs / features are available.",
          "experimental": true,
          "type": "array",
          "items": {
            "$ref": "GatedAPIFeatures"
          }
        }
      }
    }
  ],
  [
    "FrameResource",
    {
      "category": "type",
      "id": "FrameResource",
      "description": "Information about the Resource on the page.",
      "experimental": true,
      "type": "object",
      "properties": {
        "url": {
          "description": "Resource URL.",
          "type": "string"
        },
        "type": {
          "description": "Type of this resource.",
          "$ref": "Network.ResourceType"
        },
        "mimeType": {
          "description": "Resource mimeType as determined by the browser.",
          "type": "string"
        },
        "lastModified": {
          "description": "last-modified timestamp as reported by server.",
          "optional": true,
          "$ref": "Network.TimeSinceEpoch"
        },
        "contentSize": {
          "description": "Resource content size.",
          "optional": true,
          "type": "number"
        },
        "failed": {
          "description": "True if the resource failed to load.",
          "optional": true,
          "type": "boolean"
        },
        "canceled": {
          "description": "True if the resource was canceled during loading.",
          "optional": true,
          "type": "boolean"
        }
      }
    }
  ],
  [
    "FrameResourceTree",
    {
      "category": "type",
      "id": "FrameResourceTree",
      "description": "Information about the Frame hierarchy along with their cached resources.",
      "experimental": true,
      "type": "object",
      "properties": {
        "frame": {
          "description": "Frame information for this tree item.",
          "$ref": "Frame"
        },
        "childFrames": {
          "description": "Child frames.",
          "optional": true,
          "type": "array",
          "items": {
            "$ref": "FrameResourceTree"
          }
        },
        "resources": {
          "description": "Information about frame resources.",
          "type": "array",
          "items": {
            "$ref": "FrameResource"
          }
        }
      }
    }
  ],
  [
    "FrameTree",
    {
      "category": "type",
      "id": "FrameTree",
      "description": "Information about the Frame hierarchy.",
      "type": "object",
      "properties": {
        "frame": {
          "description": "Frame information for this tree item.",
          "$ref": "Frame"
        },
        "childFrames": {
          "description": "Child frames.",
          "optional": true,
          "type": "array",
          "items": {
            "$ref": "FrameTree"
          }
        }
      }
    }
  ],
  [
    "ScriptIdentifier",
    {
      "category": "type",
      "id": "ScriptIdentifier",
      "description": "Unique script identifier.",
      "type": "string"
    }
  ],
  [
    "TransitionType",
    {
      "category": "type",
      "id": "TransitionType",
      "description": "Transition type.",
      "type": "string",
      "enum": [
        "link",
        "typed",
        "address_bar",
        "auto_bookmark",
        "auto_subframe",
        "manual_subframe",
        "generated",
        "auto_toplevel",
        "form_submit",
        "reload",
        "keyword",
        "keyword_generated",
        "other"
      ]
    }
  ],
  [
    "NavigationEntry",
    {
      "category": "type",
      "id": "NavigationEntry",
      "description": "Navigation history entry.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique id of the navigation history entry.",
          "type": "integer"
        },
        "url": {
          "description": "URL of the navigation history entry.",
          "type": "string"
        },
        "userTypedURL": {
          "description": "URL that the user typed in the url bar.",
          "type": "string"
        },
        "title": {
          "description": "Title of the navigation history entry.",
          "type": "string"
        },
        "transitionType": {
          "description": "Transition type.",
          "$ref": "TransitionType"
        }
      }
    }
  ],
  [
    "ScreencastFrameMetadata",
    {
      "category": "type",
      "id": "ScreencastFrameMetadata",
      "description": "Screencast frame metadata.",
      "experimental": true,
      "type": "object",
      "properties": {
        "offsetTop": {
          "description": "Top offset in DIP.",
          "type": "number"
        },
        "pageScaleFactor": {
          "description": "Page scale factor.",
          "type": "number"
        },
        "deviceWidth": {
          "description": "Device screen width in DIP.",
          "type": "number"
        },
        "deviceHeight": {
          "description": "Device screen height in DIP.",
          "type": "number"
        },
        "scrollOffsetX": {
          "description": "Position of horizontal scroll in CSS pixels.",
          "type": "number"
        },
        "scrollOffsetY": {
          "description": "Position of vertical scroll in CSS pixels.",
          "type": "number"
        },
        "timestamp": {
          "description": "Frame swap timestamp.",
          "optional": true,
          "$ref": "Network.TimeSinceEpoch"
        }
      }
    }
  ],
  [
    "DialogType",
    {
      "category": "type",
      "id": "DialogType",
      "description": "Javascript dialog type.",
      "type": "string",
      "enum": [
        "alert",
        "confirm",
        "prompt",
        "beforeunload"
      ]
    }
  ],
  [
    "AppManifestError",
    {
      "category": "type",
      "id": "AppManifestError",
      "description": "Error while paring app manifest.",
      "type": "object",
      "properties": {
        "message": {
          "description": "Error message.",
          "type": "string"
        },
        "critical": {
          "description": "If criticial, this is a non-recoverable parse error.",
          "type": "integer"
        },
        "line": {
          "description": "Error line.",
          "type": "integer"
        },
        "column": {
          "description": "Error column.",
          "type": "integer"
        }
      }
    }
  ],
  [
    "AppManifestParsedProperties",
    {
      "category": "type",
      "id": "AppManifestParsedProperties",
      "description": "Parsed app manifest properties.",
      "experimental": true,
      "type": "object",
      "properties": {
        "scope": {
          "description": "Computed scope value",
          "type": "string"
        }
      }
    }
  ],
  [
    "LayoutViewport",
    {
      "category": "type",
      "id": "LayoutViewport",
      "description": "Layout viewport position and dimensions.",
      "type": "object",
      "properties": {
        "pageX": {
          "description": "Horizontal offset relative to the document (CSS pixels).",
          "type": "integer"
        },
        "pageY": {
          "description": "Vertical offset relative to the document (CSS pixels).",
          "type": "integer"
        },
        "clientWidth": {
          "description": "Width (CSS pixels), excludes scrollbar if present.",
          "type": "integer"
        },
        "clientHeight": {
          "description": "Height (CSS pixels), excludes scrollbar if present.",
          "type": "integer"
        }
      }
    }
  ],
  [
    "VisualViewport",
    {
      "category": "type",
      "id": "VisualViewport",
      "description": "Visual viewport position, dimensions, and scale.",
      "type": "object",
      "properties": {
        "offsetX": {
          "description": "Horizontal offset relative to the layout viewport (CSS pixels).",
          "type": "number"
        },
        "offsetY": {
          "description": "Vertical offset relative to the layout viewport (CSS pixels).",
          "type": "number"
        },
        "pageX": {
          "description": "Horizontal offset relative to the document (CSS pixels).",
          "type": "number"
        },
        "pageY": {
          "description": "Vertical offset relative to the document (CSS pixels).",
          "type": "number"
        },
        "clientWidth": {
          "description": "Width (CSS pixels), excludes scrollbar if present.",
          "type": "number"
        },
        "clientHeight": {
          "description": "Height (CSS pixels), excludes scrollbar if present.",
          "type": "number"
        },
        "scale": {
          "description": "Scale relative to the ideal viewport (size at width=device-width).",
          "type": "number"
        },
        "zoom": {
          "description": "Page zoom factor (CSS to device independent pixels ratio).",
          "optional": true,
          "type": "number"
        }
      }
    }
  ],
  [
    "Viewport",
    {
      "category": "type",
      "id": "Viewport",
      "description": "Viewport for capturing screenshot.",
      "type": "object",
      "properties": {
        "x": {
          "description": "X offset in device independent pixels (dip).",
          "type": "number"
        },
        "y": {
          "description": "Y offset in device independent pixels (dip).",
          "type": "number"
        },
        "width": {
          "description": "Rectangle width in device independent pixels (dip).",
          "type": "number"
        },
        "height": {
          "description": "Rectangle height in device independent pixels (dip).",
          "type": "number"
        },
        "scale": {
          "description": "Page scale factor.",
          "type": "number"
        }
      }
    }
  ],
  [
    "FontFamilies",
    {
      "category": "type",
      "id": "FontFamilies",
      "description": "Generic font families collection.",
      "experimental": true,
      "type": "object",
      "properties": {
        "standard": {
          "description": "The standard font-family.",
          "optional": true,
          "type": "string"
        },
        "fixed": {
          "description": "The fixed font-family.",
          "optional": true,
          "type": "string"
        },
        "serif": {
          "description": "The serif font-family.",
          "optional": true,
          "type": "string"
        },
        "sansSerif": {
          "description": "The sansSerif font-family.",
          "optional": true,
          "type": "string"
        },
        "cursive": {
          "description": "The cursive font-family.",
          "optional": true,
          "type": "string"
        },
        "fantasy": {
          "description": "The fantasy font-family.",
          "optional": true,
          "type": "string"
        },
        "math": {
          "description": "The math font-family.",
          "optional": true,
          "type": "string"
        }
      }
    }
  ],
  [
    "ScriptFontFamilies",
    {
      "category": "type",
      "id": "ScriptFontFamilies",
      "description": "Font families collection for a script.",
      "experimental": true,
      "type": "object",
      "properties": {
        "script": {
          "description": "Name of the script which these font families are defined for.",
          "type": "string"
        },
        "fontFamilies": {
          "description": "Generic font families collection for the script.",
          "$ref": "FontFamilies"
        }
      }
    }
  ],
  [
    "FontSizes",
    {
      "category": "type",
      "id": "FontSizes",
      "description": "Default font sizes.",
      "experimental": true,
      "type": "object",
      "properties": {
        "standard": {
          "description": "Default standard font size.",
          "optional": true,
          "type": "integer"
        },
        "fixed": {
          "description": "Default fixed font size.",
          "optional": true,
          "type": "integer"
        }
      }
    }
  ],
  [
    "ClientNavigationReason",
    {
      "category": "type",
      "id": "ClientNavigationReason",
      "experimental": true,
      "type": "string",
      "enum": [
        "formSubmissionGet",
        "formSubmissionPost",
        "httpHeaderRefresh",
        "scriptInitiated",
        "metaTagRefresh",
        "pageBlockInterstitial",
        "reload",
        "anchorClick"
      ]
    }
  ],
  [
    "ClientNavigationDisposition",
    {
      "category": "type",
      "id": "ClientNavigationDisposition",
      "experimental": true,
      "type": "string",
      "enum": [
        "currentTab",
        "newTab",
        "newWindow",
        "download"
      ]
    }
  ],
  [
    "InstallabilityErrorArgument",
    {
      "category": "type",
      "id": "InstallabilityErrorArgument",
      "experimental": true,
      "type": "object",
      "properties": {
        "name": {
          "description": "Argument name (e.g. name:'minimum-icon-size-in-pixels').",
          "type": "string"
        },
        "value": {
          "description": "Argument value (e.g. value:'64').",
          "type": "string"
        }
      }
    }
  ],
  [
    "InstallabilityError",
    {
      "category": "type",
      "id": "InstallabilityError",
      "description": "The installability error",
      "experimental": true,
      "type": "object",
      "properties": {
        "errorId": {
          "description": "The error id (e.g. 'manifest-missing-suitable-icon').",
          "type": "string"
        },
        "errorArguments": {
          "description": "The list of error arguments (e.g. {name:'minimum-icon-size-in-pixels', value:'64'}).",
          "type": "array",
          "items": {
            "$ref": "InstallabilityErrorArgument"
          }
        }
      }
    }
  ],
  [
    "ReferrerPolicy",
    {
      "category": "type",
      "id": "ReferrerPolicy",
      "description": "The referring-policy used for the navigation.",
      "experimental": true,
      "type": "string",
      "enum": [
        "noReferrer",
        "noReferrerWhenDowngrade",
        "origin",
        "originWhenCrossOrigin",
        "sameOrigin",
        "strictOrigin",
        "strictOriginWhenCrossOrigin",
        "unsafeUrl"
      ]
    }
  ],
  [
    "CompilationCacheParams",
    {
      "category": "type",
      "id": "CompilationCacheParams",
      "description": "Per-script compilation cache parameters for `Page.produceCompilationCache`",
      "experimental": true,
      "type": "object",
      "properties": {
        "url": {
          "description": "The URL of the script to produce a compilation cache entry for.",
          "type": "string"
        },
        "eager": {
          "description": "A hint to the backend whether eager compilation is recommended.\n(the actual compilation mode used is upon backend discretion).",
          "optional": true,
          "type": "boolean"
        }
      }
    }
  ],
  [
    "AutoResponseMode",
    {
      "category": "type",
      "id": "AutoResponseMode",
      "description": "Enum of possible auto-reponse for permisison / prompt dialogs.",
      "experimental": true,
      "type": "string",
      "enum": [
        "none",
        "autoAccept",
        "autoReject",
        "autoOptOut"
      ]
    }
  ],
  [
    "NavigationType",
    {
      "category": "type",
      "id": "NavigationType",
      "description": "The type of a frameNavigated event.",
      "experimental": true,
      "type": "string",
      "enum": [
        "Navigation",
        "BackForwardCacheRestore"
      ]
    }
  ],
  [
    "BackForwardCacheNotRestoredReason",
    {
      "category": "type",
      "id": "BackForwardCacheNotRestoredReason",
      "description": "List of not restored reasons for back-forward cache.",
      "experimental": true,
      "type": "string",
      "enum": [
        "NotPrimaryMainFrame",
        "BackForwardCacheDisabled",
        "RelatedActiveContentsExist",
        "HTTPStatusNotOK",
        "SchemeNotHTTPOrHTTPS",
        "Loading",
        "WasGrantedMediaAccess",
        "DisableForRenderFrameHostCalled",
        "DomainNotAllowed",
        "HTTPMethodNotGET",
        "SubframeIsNavigating",
        "Timeout",
        "CacheLimit",
        "JavaScriptExecution",
        "RendererProcessKilled",
        "RendererProcessCrashed",
        "SchedulerTrackedFeatureUsed",
        "ConflictingBrowsingInstance",
        "CacheFlushed",
        "ServiceWorkerVersionActivation",
        "SessionRestored",
        "ServiceWorkerPostMessage",
        "EnteredBackForwardCacheBeforeServiceWorkerHostAdded",
        "RenderFrameHostReused_SameSite",
        "RenderFrameHostReused_CrossSite",
        "ServiceWorkerClaim",
        "IgnoreEventAndEvict",
        "HaveInnerContents",
        "TimeoutPuttingInCache",
        "BackForwardCacheDisabledByLowMemory",
        "BackForwardCacheDisabledByCommandLine",
        "NetworkRequestDatapipeDrainedAsBytesConsumer",
        "NetworkRequestRedirected",
        "NetworkRequestTimeout",
        "NetworkExceedsBufferLimit",
        "NavigationCancelledWhileRestoring",
        "NotMostRecentNavigationEntry",
        "BackForwardCacheDisabledForPrerender",
        "UserAgentOverrideDiffers",
        "ForegroundCacheLimit",
        "BrowsingInstanceNotSwapped",
        "BackForwardCacheDisabledForDelegate",
        "UnloadHandlerExistsInMainFrame",
        "UnloadHandlerExistsInSubFrame",
        "ServiceWorkerUnregistration",
        "CacheControlNoStore",
        "CacheControlNoStoreCookieModified",
        "CacheControlNoStoreHTTPOnlyCookieModified",
        "NoResponseHead",
        "Unknown",
        "ActivationNavigationsDisallowedForBug1234857",
        "ErrorDocument",
        "FencedFramesEmbedder",
        "CookieDisabled",
        "HTTPAuthRequired",
        "CookieFlushed",
        "WebSocket",
        "WebTransport",
        "WebRTC",
        "MainResourceHasCacheControlNoStore",
        "MainResourceHasCacheControlNoCache",
        "SubresourceHasCacheControlNoStore",
        "SubresourceHasCacheControlNoCache",
        "ContainsPlugins",
        "DocumentLoaded",
        "DedicatedWorkerOrWorklet",
        "OutstandingNetworkRequestOthers",
        "RequestedMIDIPermission",
        "RequestedAudioCapturePermission",
        "RequestedVideoCapturePermission",
        "RequestedBackForwardCacheBlockedSensors",
        "RequestedBackgroundWorkPermission",
        "BroadcastChannel",
        "WebXR",
        "SharedWorker",
        "WebLocks",
        "WebHID",
        "WebShare",
        "RequestedStorageAccessGrant",
        "WebNfc",
        "OutstandingNetworkRequestFetch",
        "OutstandingNetworkRequestXHR",
        "AppBanner",
        "Printing",
        "WebDatabase",
        "PictureInPicture",
        "Portal",
        "SpeechRecognizer",
        "IdleManager",
        "PaymentManager",
        "SpeechSynthesis",
        "KeyboardLock",
        "WebOTPService",
        "OutstandingNetworkRequestDirectSocket",
        "InjectedJavascript",
        "InjectedStyleSheet",
        "KeepaliveRequest",
        "IndexedDBEvent",
        "Dummy",
        "JsNetworkRequestReceivedCacheControlNoStoreResource",
        "WebRTCSticky",
        "WebTransportSticky",
        "WebSocketSticky",
        "SmartCard",
        "LiveMediaStreamTrack",
        "UnloadHandler",
        "ContentSecurityHandler",
        "ContentWebAuthenticationAPI",
        "ContentFileChooser",
        "ContentSerial",
        "ContentFileSystemAccess",
        "ContentMediaDevicesDispatcherHost",
        "ContentWebBluetooth",
        "ContentWebUSB",
        "ContentMediaSessionService",
        "ContentScreenReader",
        "EmbedderPopupBlockerTabHelper",
        "EmbedderSafeBrowsingTriggeredPopupBlocker",
        "EmbedderSafeBrowsingThreatDetails",
        "EmbedderAppBannerManager",
        "EmbedderDomDistillerViewerSource",
        "EmbedderDomDistillerSelfDeletingRequestDelegate",
        "EmbedderOomInterventionTabHelper",
        "EmbedderOfflinePage",
        "EmbedderChromePasswordManagerClientBindCredentialManager",
        "EmbedderPermissionRequestManager",
        "EmbedderModalDialog",
        "EmbedderExtensions",
        "EmbedderExtensionMessaging",
        "EmbedderExtensionMessagingForOpenPort",
        "EmbedderExtensionSentMessageToCachedFrame"
      ]
    }
  ],
  [
    "BackForwardCacheNotRestoredReasonType",
    {
      "category": "type",
      "id": "BackForwardCacheNotRestoredReasonType",
      "description": "Types of not restored reasons for back-forward cache.",
      "experimental": true,
      "type": "string",
      "enum": [
        "SupportPending",
        "PageSupportNeeded",
        "Circumstantial"
      ]
    }
  ],
  [
    "BackForwardCacheBlockingDetails",
    {
      "category": "type",
      "id": "BackForwardCacheBlockingDetails",
      "experimental": true,
      "type": "object",
      "properties": {
        "url": {
          "description": "Url of the file where blockage happened. Optional because of tests.",
          "optional": true,
          "type": "string"
        },
        "function": {
          "description": "Function name where blockage happened. Optional because of anonymous functions and tests.",
          "optional": true,
          "type": "string"
        },
        "lineNumber": {
          "description": "Line number in the script (0-based).",
          "type": "integer"
        },
        "columnNumber": {
          "description": "Column number in the script (0-based).",
          "type": "integer"
        }
      }
    }
  ],
  [
    "BackForwardCacheNotRestoredExplanation",
    {
      "category": "type",
      "id": "BackForwardCacheNotRestoredExplanation",
      "experimental": true,
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of the reason",
          "$ref": "BackForwardCacheNotRestoredReasonType"
        },
        "reason": {
          "description": "Not restored reason",
          "$ref": "BackForwardCacheNotRestoredReason"
        },
        "context": {
          "description": "Context associated with the reason. The meaning of this context is\ndependent on the reason:\n- EmbedderExtensionSentMessageToCachedFrame: the extension ID.",
          "optional": true,
          "type": "string"
        },
        "details": {
          "optional": true,
          "type": "array",
          "items": {
            "$ref": "BackForwardCacheBlockingDetails"
          }
        }
      }
    }
  ],
  [
    "BackForwardCacheNotRestoredExplanationTree",
    {
      "category": "type",
      "id": "BackForwardCacheNotRestoredExplanationTree",
      "experimental": true,
      "type": "object",
      "properties": {
        "url": {
          "description": "URL of each frame",
          "type": "string"
        },
        "explanations": {
          "description": "Not restored reasons of each frame",
          "type": "array",
          "items": {
            "$ref": "BackForwardCacheNotRestoredExplanation"
          }
        },
        "children": {
          "description": "Array of children frame",
          "type": "array",
          "items": {
            "$ref": "BackForwardCacheNotRestoredExplanationTree"
          }
        }
      }
    }
  ],
  [
    "on",
    null
  ]
]